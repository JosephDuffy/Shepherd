name: Tests

on: [push]

jobs:
  swiftpm_tests:
    name: SwiftPM on Xcode ${{ matrix.xcode }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        xcode: ["11.1", "11.2"]

    steps:
    - uses: actions/checkout@v1

    - name: Select Xcode ${{ matrix.xcode }}
      run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

    - name: Cache SwiftPM
      uses: actions/cache@preview
      with:
        path: .build
        key: ${{ runner.os }}-xcode_${{ matrix.xcode }}-swiftpm-${{ hashFiles(format('{0}{1}', github.workspace, '/Package.resolved')) }}
        restore-keys: |
          ${{ runner.os }}-xcode_${{ matrix.xcode }}-swiftpm-
    - name: SwiftPM tests
      run: swift test --skip-update

  xcode_tests:
    name: ${{ matrix.platform }} on Xcode ${{ matrix.xcode }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        xcode: ["11.1", "11.2"]
        platform: ["iOS", "tvOS", "macOS"]

    steps:
    - uses: actions/checkout@v1

    - name: Select Xcode ${{ matrix.xcode }}
      run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

    - name: Cache Bundler
      uses: actions/cache@preview
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-bundler-
    - name: bundle install
      run: bundle install --deployment

    - name: Test ${{ matrix.platform }}
      run: bundle exec fastlane scan --clean --scheme "Shepherd-${{ matrix.platform }}"

    - name: Coveralls
      run: bash <(curl -s https://codecov.io/bash) -J "Shepherd-${{ matrix.platform }}"
      env:
         CODECOV_TOKEN: ${{ secrets. CODECOV_TOKEN }}

  carthage_archive:
    name: Carthage Archive on Xcode ${{ matrix.xcode }}
    runs-on: macos-latest
    strategy:
      matrix:
        xcode: ["11.2"]

    steps:
    - uses: actions/checkout@v1

    - name: Select Xcode ${{ matrix.xcode }}
      run: sudo xcode-select --switch /Applications/Xcode_${{ matrix.xcode }}.app

    - name: Build Carthage Archive
      run: carthage build --archive --platform iOS,macOS,tvOS,watchOS
