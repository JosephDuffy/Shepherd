#if !canImport(ObjectiveC)
import XCTest

extension AsynchronousClosurePathHandlerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AsynchronousClosurePathHandlerTests = [
        ("testClosurePathHandlerHandlingPath", testClosurePathHandlerHandlingPath),
        ("testClosurePathHandlerNotHandlingPath", testClosurePathHandlerNotHandlingPath),
        ("testClosurePathHandlerWithDifferentPathType", testClosurePathHandlerWithDifferentPathType),
    ]
}

extension RouterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RouterTests = [
        ("testEmptyRouter", testEmptyRouter),
        ("testEmptyRouterWithParent", testEmptyRouterWithParent),
        ("testEmptyRouterWithParentHandlingPath", testEmptyRouterWithParentHandlingPath),
        ("testEmptyRouterWithParentIgnoringParent", testEmptyRouterWithParentIgnoringParent),
        ("testRemovingWithMultipleChildren", testRemovingWithMultipleChildren),
        ("testRouterRemovingNonChildRouter", testRouterRemovingNonChildRouter),
        ("testRouterWithChildHandlerHandlingPath", testRouterWithChildHandlerHandlingPath),
        ("testRouterWithChildRouter", testRouterWithChildRouter),
        ("testRouterWithMultipleParents", testRouterWithMultipleParents),
        ("testRouterWithMultiplePriorityHandlers", testRouterWithMultiplePriorityHandlers),
        ("testRouterWithRemovedHandler", testRouterWithRemovedHandler),
    ]
}

extension SynchronousClosurePathHandlerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SynchronousClosurePathHandlerTests = [
        ("testClosurePathHandlerHandlingPath", testClosurePathHandlerHandlingPath),
        ("testClosurePathHandlerNotHandlingPath", testClosurePathHandlerNotHandlingPath),
        ("testClosurePathHandlerWithDifferentPathType", testClosurePathHandlerWithDifferentPathType),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AsynchronousClosurePathHandlerTests.__allTests__AsynchronousClosurePathHandlerTests),
        testCase(RouterTests.__allTests__RouterTests),
        testCase(SynchronousClosurePathHandlerTests.__allTests__SynchronousClosurePathHandlerTests),
    ]
}
#endif
